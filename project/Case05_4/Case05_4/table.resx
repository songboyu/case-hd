<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qL/qb/5kW/A/Ox14SFfeIAoAAAAASUVORK5CYII=
</value>
  </data>
</root>